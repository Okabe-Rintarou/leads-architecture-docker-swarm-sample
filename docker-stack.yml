version: "3.7"
services:

  rabbitmq:
    image: rabbitmq:3.6-management
    ports:
      - "5672:5672"
      - "15672:15672"
    deploy:
      restart_policy:
        condition: on-failure
    networks: 
      - frontend
      - backend

  mysql:
    image: mysql:5.7
    ports:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: leads
      MYSQL_USER: leads
      MYSQL_PASSWORD: leads
    volumes:
      - "db-data:/var/lib/mysql"
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - backend

  web:
    image: alefh/leads-input
    ports:
      - "5000:80"
    environment: 
      RABBIT_HOST: rabbitmq
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      rollback_config:
        parallelism: 1
        delay: 10s
        monitor: 30s
        order: start-first

    depends_on:
      - rabbitmq
    networks: 
      - frontend
  api:
    image: alefh/leads-api
    ports:
      - "5001:80"
    environment:
      MYSQL_HOST: mysql
      RABBIT_MQ_HOST: rabbitmq
    deploy:
      restart_policy:
        condition: on-failure
    depends_on: 
      - rabbitmq
      - mysql
    networks: 
      - backend

volumes:
  db-data:

networks:
  frontend:
  backend: